plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "com.github.node-gradle.node" version "4.0.0" /* node추가 23.05.01 간승기 */
    id 'java'
    id 'war'
}

group = 'co.project'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

war { enabled = false }
repositories {
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //db
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.4'
    providedCompile 'mysql:mysql-connector-java'

    // apache io stream
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'commons-io:commons-io:2.7'

    // lombok
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // 프로퍼티 암호화
    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'

    // spring-security-crypto
    implementation 'org.springframework.security:spring-security-crypto:6.0.2'

    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // json
    implementation 'org.json:json:20220320'

    // open api (swagger-ui 포함)
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'

    // playback token 서명
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // google
    implementation 'com.google.guava:guava:31.1-jre'

    // npm node
    implementation 'com.github.node-gradle:gradle-node-plugin:4.0.0'
}

apply plugin: "com.github.node-gradle.node"



test {
    useJUnitPlatform()
}




ext.profile = (!project.hasProperty('profile') || !profile) ? 'dev' : profile
sourceSets {
    main {
        resources {
            srcDirs "src/main/resources-${profile}"
        }
    }
}